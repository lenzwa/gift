/* eslint-disable no-mixed-spaces-and-tabs */
import { useRef, useState } from 'react'
import './App.css'

function App() {
	const [styleToggle, setStyleToggle] = useState(true)
	const [text, setText] = useState()
	const [text2, setText2] = useState()
	const [text3, setText3] = useState()
	const [seconds, setSeconds] = useState(false)
	const tempText = useRef()
	const [triger, setTriger] = useState(true)
	{
		setTimeout(() => {
			setSeconds(true)
		}, 5000)
	}
	return (
		<>
			<div className='hero'>
				<div className={styleToggle ? 'main' : 'mainsecret'}>
					<h1 className={`${styleToggle ? 'Attempt' : 'Attempt-2'}`}>
						–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, Luna aka üåô{' '}
					</h1>
					<button
						className={`${styleToggle ? 'Attempt-3' : 'Attempt-4'}`}
						onClick={() => {
							setStyleToggle(!styleToggle)
						}}
					>
						–î–∞–ª—å—à–µ?
					</button>
				</div>
				<div
					className={`${
						styleToggle
							? 'modular-1'
							: `${text == '–≤ –∫–æ–º–ø–∞—Ö' ? 'modular-attempt2' : 'modular-attempt'}`
					}`}
				>
					<div className='modular-1image'>
						<img src='./photo2.jpg' alt='' />
					</div>
					<h2>
						–•–æ—Ç–µ–ª –±—ã —É–ø–æ–º—è–Ω—É—Ç—å, —á—Ç–æ —Ç–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É–∂–µ –ø—Ä–æ—à–µ–ª –∏ –≤—Ä—è–¥ –ª–∏ —Ç—ã
						—Ç–∞–∫ –±—ã—Å—Ç—Ä–æ –¥–æ—à–ª–∞ –¥–æ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—á–∏—Ç—ã–≤–∞—è —á—Ç–æ —Ç–µ–±–µ –ª–µ–Ω—å. –ê–≤–≥—É—Å—Ç 12
						- 2023
					</h2>
					<label htmlFor=''>
						–ß—Ç–æ–±—ã —Ç–µ–±–µ –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –ì–¥–µ
						–º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å?
					</label>
					<input
						onChange={e => {
							tempText.current = e.target.value
						}}
						value={text}
						type='text'
						placeholder='–û—Ç–≤–µ—Ç'
						maxLength={25}
					/>
					<button
						onClick={() => {
							tempText.current == '–≤ –∫–æ–º–ø–∞—Ö'
								? setText(tempText.current)
								: setTimeout(() => {
										setText('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
										setTimeout(() => {
											setText('')
											setTimeout(() => {
												setText()
											}, 100)
										}, 1500)
								  }, 0)
						}}
					>
						Submit
					</button>
				</div>

				<div
					className={
						text == '–≤ –∫–æ–º–ø–∞—Ö' && text2 != '–ï—Ä–¥–µ–Ω'
							? 'modular-2attempt'
							: 'modular-2'
					}
				>
					<h2>
						–í–æ—É, —Ç—ã —É–∂–µ —Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–∞ —è –¥—É–º–∞—é —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –ø–æ–¥—É–º–∞—Ç—å
						–Ω–∞–¥ —Ç–µ–º —á—Ç–æ —Ç—ã —á–∏—Ç–∞–µ—à—å, –º–æ–∂–µ—Ç –≤ —ç—Ç–æ–º –µ—Å—Ç—å –∫–∞–∫–æ–π —Ç–æ —Å–º—ã—Å–ª?
					</h2>
					<p>–ú–æ–∂–µ—Ç —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –≤—Å–ø–æ–º–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 19?</p>
					<input
						onChange={e => {
							tempText.current = e.target.value
						}}
						value={text2}
						type='text'
						placeholder='–ò–º—è'
						maxLength={22}
					/>
					<button
						onClick={() => {
							tempText.current == '–ï—Ä–¥–µ–Ω'
								? setText2(tempText.current)
								: setTimeout(() => {
										setText2('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
										setTimeout(() => {
											setText2('')
											setTimeout(() => {
												setText2()
											}, 100)
										}, 1500)
								  }, 0)
						}}
					>
						Submit
					</button>
				</div>
				{text2 == '–ï—Ä–¥–µ–Ω' && triger == true && text3 != '–∫–≤–µ—Å—Ç' ? (
					<>
						<svg className='cloud' viewBox='0 0 115 105'>
							<path
								fill='white'
								d='M 25,60 
           a 20,20 1 0,0 0,40 
           h 50 
           a 20,20 1 0,0 0,-40 
           a 10,10 1 0,0 -15,-10 
           a 15,15 1 0,0 -35,10  
           z'
							/>
						</svg>
						<svg
							xmlns='http://www.w3.org/2000/svg'
							version='1.1'
							className='moon'
						>
							<circle
								cx='100'
								cy='50'
								r='40'
								stroke='black'
								strokeWidth='2'
								fill='cyan'
							/>
							<circle
								cx='115'
								cy='50'
								r='30'
								stroke='black'
								strokeWidth='2'
								fill='black'
							/>
							<circle
								cx='130'
								cy='50'
								r='23'
								stroke='black'
								strokeWidth='2'
								fill='black'
							/>
						</svg>

						<div className={seconds ? 'anim-img' : 'hidden-img'}>
							<img src='./photo3.jpg' alt='' />

							<button
								onClick={() => {
									alert('–û–ø –æ–ø –æ–ø')
									setTriger(false)
									tempText.current = ''
								}}
							></button>
						</div>
					</>
				) : (
					<></>
				)}

				<div className={!triger ? 'prefinal_modular' : 'modular-3'}>
					<h2>
						–ß—Ç–æ–∂ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç—ã —É–∂–µ –¥–æ–±—Ä–∞–ª–∞—Å—å –¥–æ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è
						–Ω–∞–π—Ç–∏ 43¬∞10(–æ–¥–∏–Ω–æ—á–Ω–∞—è –∫–∞–≤—ã—á–∫–∞)05.3(–î–≤–æ–π–Ω–∞—è –∫–∞–≤—ã—á–∫–∞)N 76¬∞52(–û–¥–∏–Ω–æ—á–Ω–∞—è
						–∫–∞–≤—ã—á–∫–∞)33.6(–î–≤–æ–π–Ω–∞—è –∫–∞–≤—ã—á–∫–∞)E , –ø–æ—Å–ª–µ –Ω–∞–π—Ç–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
						—Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —ç—Ç–∏–º
					</h2>
					<input
						onChange={e => {
							tempText.current = e.target.value
						}}
						value={text3}
						type='text'
						placeholder='–°–ª–æ–≤–æ'
						maxLength={22}
					/>
					<button
						onClick={() => {
							tempText.current == '–∫–≤–µ—Å—Ç'
								? setText3(tempText.current)
								: setTimeout(() => {
										setText3('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
										setTimeout(() => {
											setText3('')
											setTimeout(() => {
												setText3()
											}, 100)
										}, 1500)
								  }, 0)
						}}
					>
						Submit
					</button>
					{text3 == '–∫–≤–µ—Å—Ç' ? (
						<>
							<a
								onClick={() => {
									setTriger(true)
								}}
								target='_blank'
								rel='noreferrer'
								href='https://drive.google.com/drive/folders/1FzlJhSfk3dadrcU41k_MGJxnxTUamk-z?usp=drive_link'
							>
								–°—Å—ã–ª–∫–∞
							</a>
							{(tempText.current = '')}
						</>
					) : (
						<>
							<h5>–ë–£–£–£ üé≠ü§£ü§£ü§£</h5>
						</>
					)}
				</div>
				<div
					className={
						triger && text2 == '–ï—Ä–¥–µ–Ω' && text3 == '–∫–≤–µ—Å—Ç'
							? 'final'
							: 'modular-4'
					}
				>
					<h2>–ú–Ω–µ —Ç–µ–±—è –∂–∞–ª—å –Ω–æ —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è –¥–æ–¥—É–º–∞—Ç—å—Å—è –∏–ª–∏ —É–≥–∞–¥–∞—Ç—å</h2>
					<a
						target='_blank'
						rel='noreferrer'
						href='https://i.stack.imgur.com/0MIzp.png'
					>
						Tap
					</a>
					<input
						onChange={e => {
							tempText.current = e.target.value
							tempText.current == '–ê–π—Å—É–ª—Ç–∞–Ω'
								? alert('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Ç—ã –≤—ã–∏–≥—Ä–∞–ª–∞ , 5000ms f12 press')
								: console.log(
										'–î–∏–∞–Ω–∞ —Ä–µ—à–∞–µ—Ç —ç—Ç–æ –æ—á–µ–Ω—å –¥–æ–ª–≥–æ, –¥—É–º–∞—é —Ç—ã –∏–∑—Ä—è–¥–Ω–æ –ø–æ–ø–æ—Ç–µ–ª–∞ –ø–æ–∫–∞ —ç—Ç–æ –¥–µ–ª–∞–ª–∞ —Ö–æ—á—É –≤—Å–µ —Ç–∞–∫–∂–µ –Ω–∞–ø–æ–º–Ω–∏—Ç—å —á—Ç–æ —Ç—ã –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π —á–µ–ª–æ–≤–µ–∫ –∏ —è —Ä–∞–¥ —á—Ç–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å —Ç–æ–±–æ–π —Ç–∞–∫ –∫–∞–∫ —è –≤–ø–µ—Ä–≤—ã–µ –º–æ–≥ —Ç–∞–∫ –ª–µ–≥–∫–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫–∞–∫ —Ç–µ–±–µ :D'
								  )
						}}
						type='text'
						placeholder=''
						maxLength={8}
					/>
					{tempText.current == '–ê–π—Å—É–ª—Ç–∞–Ω'
						? console.log(
								'https://drive.google.com/file/d/1WSCBHi2IXyCvH2CkB9XUQsgO6z5akubY/view?usp=drive_link'
						  )
						: console.log(
								'https://drive.google.com/file/d/1WSCBHi2IXyCvH2CkB9XUQsgO6z5akubY/view?usp=drive_link'
						  )}
				</div>
			</div>
		</>
	)
}

export default App
